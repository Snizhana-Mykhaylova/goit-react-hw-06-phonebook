{"version":3,"sources":["components/Filter/filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js","components/Form/form.module.css","components/Contacts/contacts.module.css"],"names":["module","exports","addContact","createAction","contactName","ContactNumber","payload","id","uuidv4","name","number","filterChange","deleteContact","contactsReducer","createReducer","actions","state","filter","filterReducer","_","combineReducers","contacts","store","configureStore","reducer","phonebook","phoneReducer","Form","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","formReset","this","className","styles","form","input","type","pattern","title","required","onChange","button","Component","connect","dispatch","phoneFormatter","require","allContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","onDeleteContact","map","contact","contactItem","format","onClick","Filter","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07c5d590.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__3rGOU\"};","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction(\r\n  'contscts/addContact',\r\n  (contactName, ContactNumber) => {\r\n    return {\r\n      payload: {\r\n        id: uuidv4(),\r\n        name: contactName,\r\n        number: ContactNumber,\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nexport const filterChange = createAction('contacts/filterChange');\r\n\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './phonebook-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport phoneReducer from './phonebook/phonebook-reducer.js';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phoneReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const number = this.state.number;\r\n    const name = this.state.name;\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.input}>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.input}>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport styles from './contacts.module.css';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst phoneFormatter = require('phone-formatter');\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li className={styles.contactItem} key={contact.id}>\r\n          {contact.name}:\r\n          <span className={styles.number}>\r\n            {phoneFormatter.format(contact.number, 'NNN-NN-NN')}\r\n          </span>\r\n          <button\r\n            className={styles.button}\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state.phonebook;\r\n  const filteredContacts = getFilteredContacts(contacts, filter);\r\n\r\n  return { contacts: filteredContacts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\nconst mapStateToProps = state => {\r\n  return { value: state.phonebook.filter };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.filterChange(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\n\nimport './common.css';\n\nconst App = () => (\n  <div className=\"containerApp\">\n    <h1>Phonebook</h1>\n    <Form />\n    <h2>Contacts</h2>\n    <Filter />\n    <Contacts />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1jp82\",\"input\":\"form_input__1HwQh\",\"button\":\"form_button__3LqjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__20TnE\",\"number\":\"contacts_number__24waS\",\"button\":\"contacts_button__3eH0D\"};"],"sourceRoot":""}